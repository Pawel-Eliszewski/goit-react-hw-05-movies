{"version":3,"file":"static/js/881.0ae34520.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieList_form__LHsxO\",\"list\":\"MovieList_list__yjDCC\"};","import { Link } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies, query, fromPage }) => {\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => {\n        return (\n          <li key={nanoid()} id={movie.id} className={css.item}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ query: query, from: fromPage }}\n            >\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  fromPage: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\"};","import { Suspense, useState, useEffect } from 'react';\nimport { useSearchParams, Outlet } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport Api from 'services/api';\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [queryMovies, setQueryMovies] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    const query = searchParams.toString().slice(6);\n    Api.fetchQueryMovies(query, setQueryMovies);\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          id={nanoid()}\n          autoComplete=\"off\"\n          placeholder=\"Movie title\"\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n        {queryMovies.length > 0 ? (\n          <MovieList\n            movies={queryMovies}\n            query={searchParams.toString()}\n            fromPage=\"movies\"\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '839697383a813005be150e7d8de4d319';\n\nconst fetchTrendingMovies = async setTrendingMovies => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setTrendingMovies(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchQueryMovies = async (query, setQueryMovies) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: KEY,\n        query,\n      },\n    });\n\n    return await setQueryMovies(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieDetails = async (movieId, setMovie) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovie(resp.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieCast = async (movieId, setMovieCast) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovieCast(resp.data.cast);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieReviews = async (movieId, setMovieReviews) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovieReviews(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Api = {\n  fetchTrendingMovies,\n  fetchQueryMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default Api;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MovieList","movies","query","fromPage","className","css","map","movie","id","to","state","from","title","name","nanoid","Movies","useSearchParams","searchParams","setSearchParams","useState","queryMovies","setQueryMovies","useEffect","toString","slice","Api","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","autoComplete","placeholder","required","Suspense","fallback","Loader","length","BASE_URL","KEY","fetchTrendingMovies","setTrendingMovies","axios","params","api_key","resp","data","results","console","error","fetchQueryMovies","fetchMovieDetails","movieId","setMovie","fetchMovieCast","setMovieCast","cast","fetchMovieReviews","setMovieReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}