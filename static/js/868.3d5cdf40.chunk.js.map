{"version":3,"file":"static/js/868.3d5cdf40.chunk.js","mappings":"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","sources":["utils/getMovieYear.js","utils/getMovieVote.js","utils/getMovieGenres.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const getMovieYear = movie => {\n  if (movie.release_date) {\n    return movie.release_date.slice(0, 4);\n  } else if (movie.first_air_date) {\n    return movie.first_air_date.slice(0, 4);\n  }\n};\n","export const getMovieVote = movie => {\n  let movieVote = Math.round(movie.vote_average * 10);\n  return movieVote;\n};\n","export const getMovieGenres = movie => {\n  if (movie.genres) {\n    let genre = movie.genres.map(genre => genre.name);\n    return genre.join(', ');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetails_btn__7L5IF\",\"main\":\"MovieDetails_main__Q9jrF\",\"div\":\"MovieDetails_div__-27Pl\",\"desc\":\"MovieDetails_desc__nunY6\",\"info\":\"MovieDetails_info__qv2SI\"};","import { Suspense, useState, useEffect } from 'react';\nimport {\n  Outlet,\n  Link,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieYear } from 'utils/getMovieYear';\nimport { getMovieVote } from 'utils/getMovieVote';\nimport { getMovieGenres } from 'utils/getMovieGenres';\nimport { Loader } from 'components/Loader/Loader';\nimport Api from 'services/api';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    Api.fetchMovieDetails(movieId, setMovie);\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    if (location.state.from === 'home') {\n      navigate('/');\n    } else {\n      navigate(`/movies?${location.state.query}`);\n    }\n  };\n\n  return (\n    <main className={css.main}>\n      <button onClick={handleGoBack} className={css.btn}>\n        &larr; Go back\n      </button>\n      <div className={css.div}>\n        {movie.poster_path ? (\n          <img\n            className={css.img}\n            src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${movie.poster_path}`}\n            width=\"200\"\n            height=\"300\"\n            alt={movie.name || movie.title}\n          ></img>\n        ) : (\n          <img\n            src={require('../../images/noImgPlaceholder.jpg')}\n            width=\"200\"\n            height=\"300\"\n            alt={movie.name || movie.title}\n          ></img>\n        )}\n        <div className={css.desc}>\n          <h1>\n            {movie.name || movie.title} ({getMovieYear(movie)})\n          </h1>\n          <p>User score: {getMovieVote(movie)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <p>{getMovieGenres(movie)}</p>\n        </div>\n      </div>\n      <div className={css.info}>\n        <h6>Additional information</h6>\n        <ul>\n          <li>\n            <Link to={`cast`} state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '839697383a813005be150e7d8de4d319';\n\nconst fetchTrendingMovies = async setTrendingMovies => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setTrendingMovies(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchQueryMovies = async (query, setQueryMovies) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: KEY,\n        query,\n      },\n    });\n\n    return await setQueryMovies(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieDetails = async (movieId, setMovie) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovie(resp.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieCast = async (movieId, setMovieCast) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovieCast(resp.data.cast);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchMovieReviews = async (movieId, setMovieReviews) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await setMovieReviews(resp.data.results);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Api = {\n  fetchTrendingMovies,\n  fetchQueryMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default Api;\n"],"names":["getMovieYear","movie","release_date","slice","first_air_date","getMovieVote","Math","round","vote_average","getMovieGenres","genres","map","genre","name","join","MovieDetails","useState","setMovie","navigate","useNavigate","location","useLocation","movieId","useParams","useEffect","Api","className","css","onClick","state","from","query","poster_path","src","width","height","alt","title","require","overview","to","Suspense","fallback","Loader","BASE_URL","KEY","fetchTrendingMovies","setTrendingMovies","axios","params","api_key","resp","data","results","console","error","fetchQueryMovies","setQueryMovies","fetchMovieDetails","fetchMovieCast","setMovieCast","cast","fetchMovieReviews","setMovieReviews"],"sourceRoot":""}