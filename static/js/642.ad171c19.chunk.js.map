{"version":3,"file":"static/js/642.ad171c19.chunk.js","mappings":"2LACA,GAAgB,KAAO,wBAAwB,KAAO,yB,SCIzCA,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAClC,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGH,EAAOI,KAAI,SAAAC,GACV,OACE,eAAmBC,GAAID,EAAMC,GAAIJ,UAAWC,EAAAA,KAA5C,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaF,EAAMC,IAAME,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,OAASL,EAAMM,SAFjBC,EAAAA,EAAAA,MAMZ,KAGN,C,oHCnBYC,EAAmB,mCAAG,8FAASC,EAAT,EAASA,kBACpCC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAN2B,SAU3BC,MAAM,kDAAmDL,GAC5DM,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJb,EAAkBa,EAAKC,QACxB,IACAC,OAAM,SAAAC,GACLC,QAAQC,MAAMF,EACf,IAtB8B,2CAAH,sD,kBCIjB,SAASG,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBrB,EAAvB,KAMA,OAJAsB,EAAAA,EAAAA,YAAU,WACRvB,EAAoB,CAAEC,kBAAAA,GACvB,GAAE,KAGD,iCACE,wBAAI,mBACHqB,EAAeE,OAAS,GAAI,SAACtC,EAAA,EAAD,CAAWC,OAAQmC,EAAgBlC,SAAS,SAAY,OAG1F,C,sBCjBD,SAASqC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOf,GAEP,YADAS,EAAOT,EAET,CAEIc,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO1B,KAAKqB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOb,GACdQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASb,EACnE,CAEAY,OAAMe,EACR,GACF,CACF,C,sFCjCO,IAkBI7C,EAAS,eAAC8C,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACxD,EAAIyD,GAWvD,OAREzD,IAFFyD,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","services/fetchTrendingMovies.js","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieList_form__LHsxO\",\"list\":\"MovieList_list__yjDCC\"};","import { Link } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies, fromPage }) => {\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => {\n        return (\n          <li key={nanoid()} id={movie.id} className={css.item}>\n            <Link to={`/movies/${movie.id}`} state={{ from: fromPage }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  fromPage: PropTypes.string.isRequired,\n};\n","export const fetchTrendingMovies = async ({ setTrendingMovies }) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4Mzk2OTczODNhODEzMDA1YmUxNTBlN2Q4ZGU0ZDMxOSIsInN1YiI6IjY0OTE5ZGYxYzJmZjNkMDBlMmUyMWJmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IbO3a4f3FNpftElFUbgd3_z8DfrptFKWxvdZo4ijCfs',\n    },\n  };\n\n  await fetch('https://api.themoviedb.org/3/trending/movie/day', options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => {\n      setTrendingMovies(data.results);\n    })\n    .catch(err => {\n      console.error(err);\n    });\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/fetchTrendingMovies';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies({ setTrendingMovies });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {trendingMovies.length > 0 ? <MovieList movies={trendingMovies} fromPage=\"home\" /> : null}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MovieList","movies","fromPage","className","css","map","movie","id","to","state","from","title","name","nanoid","fetchTrendingMovies","setTrendingMovies","options","method","headers","accept","Authorization","fetch","then","response","ok","Error","status","json","data","results","catch","err","console","error","Home","useState","trendingMovies","useEffect","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}